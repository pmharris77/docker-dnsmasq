name: Build image and push to DockerHub

on:
  workflow_dispatch: # For manually running on GitHub webpage
  push:
    branches:
      - main
    tags:
      - '*.*.*'
  pull_request:

env:
  docker_repository: paulharris77/docker

jobs:
  configure:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Create configuration
      run: |
        DOCKER_IMAGE=dnsmasq
        DNSMASQ_VERSION=$(cat .dnsmasq-version)
        TAGS="${{ env.docker_repository }}:$DOCKER_IMAGE-${DNSMASQ_VERSION}"
        TAGS="$TAGS,${{ env.docker_repository }}:$DOCKER_IMAGE-latest"
        TAGS="$TAGS,${{ env.docker_repository }}:$DOCKER_IMAGE-${DNSMASQ_VERSION}-${GITHUB_SHA::8}"

        # Store docker build info in env file for use by docker job
        printf "%s\n" \
          "dnsmasq_version=$DNSMASQ_VERSION" \
          "tags=${TAGS}" \
          "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" | tee -a .github_env

    - name: Upload .github_env
      uses: actions/upload-artifact@v4
      with:
        name: GITHUB_ENV
        path: .github_env
        include-hidden-files: true

  lint:
    needs: [configure]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Lint Dockerfiles
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile

    - name: Validate docker-compose.yml
      run: |
        docker compose -f docker-compose.yml config >/dev/null

  docker:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download .github_env
      uses: actions/download-artifact@v4
      with:
        name: GITHUB_ENV
        path: .

    - name: Restore $GITHUB_ENV
      run: cat .github_env >> $GITHUB_ENV

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        push: ${{ github.ref == 'refs/heads/main' }} # Only push image if we are on main (not for PR merge branches)
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        tags: ${{ env.tags }}
        labels: |
          org.opencontainers.image.created=${{ env.created }}
          org.opencontainers.image.source=${{ github.repositoryUrl }}
          org.opencontainers.image.version=${{ env.dnsmasq_version }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=${{ github.event.repository.license.name }}
